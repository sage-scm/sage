# Release Configuration for Sage
# Follows semantic-release and conventional commits standards

# Conventional commit type mappings
conventional_commits:
  # Types that trigger version bumps
  types:
    feat: minor        # New features
    fix: patch         # Bug fixes
    perf: patch        # Performance improvements
    
  # Types that don't trigger releases (but appear in changelog)
  non_release_types:
    docs: none         # Documentation changes
    style: none        # Code style changes (formatting, etc.)
    refactor: none     # Code refactoring without feature/fix
    test: none         # Test additions or modifications
    build: none        # Build system changes
    ci: none           # CI/CD changes
    chore: none        # Maintenance tasks
    revert: patch      # Reverts (treated as fixes)

  # Breaking change indicators
  breaking_change:
    indicators:
      - "!"            # Type with ! (e.g., feat!:)
      - "BREAKING CHANGE"  # In commit body
    bump_type: major

# Release notes configuration
release_notes:
  # Section order and formatting
  sections:
    - title: "‚ö†Ô∏è Breaking Changes"
      types: ["BREAKING"]
      emoji: "‚ö†Ô∏è"
      description: "Changes that may require code updates"
      
    - title: "üöÄ Features" 
      types: ["feat"]
      emoji: "üöÄ"
      description: "New features and enhancements"
      
    - title: "üêõ Bug Fixes"
      types: ["fix", "perf"]
      emoji: "üêõ"
      description: "Bug fixes and performance improvements"
      
    - title: "üìö Documentation"
      types: ["docs"]
      emoji: "üìö"
      description: "Documentation updates"
      
    - title: "üîß Other Changes"
      types: ["chore", "refactor", "test", "build", "ci", "style"]
      emoji: "üîß"
      description: "Maintenance and other improvements"

  # Templates
  templates:
    header: |
      ## What's Changed in v{version}
      
    version_summary:
      major: "üö® **Major Release** - Contains breaking changes that may require code updates"
      minor: "‚ú® **Minor Release** - New features and improvements"  
      patch: "üîß **Patch Release** - Bug fixes and minor improvements"
      initial: "üéâ **Initial Release** - Welcome to Sage!"
      
    installation: |
      ## Installation

      ### Quick Install (Recommended)
      ```bash
      curl -fsSL https://raw.githubusercontent.com/sage-scm/sage/main/install.sh | sh
      ```

      ### Manual Download
      Download the appropriate binary for your platform from the assets below:

      - **macOS**: `sg-macos-amd64.tar.gz` (Intel) or `sg-macos-arm64.tar.gz` (Apple Silicon)
      - **Linux**: `sg-linux-amd64.tar.gz` (glibc) or `sg-linux-amd64-musl.tar.gz` (musl)  
      - **Windows**: `sg-windows-amd64.zip`

      All binaries include SHA256 checksums for verification.

      ### Build from Source
      ```bash
      cargo install --git https://github.com/sage-scm/sage --tag v{version} sage-cli
      ```

# Changelog configuration (Keep a Changelog format)
changelog:
  format: "keepachangelog"
  sections:
    - title: "Changed"
      types: ["BREAKING"]
      
    - title: "Added" 
      types: ["feat"]
      
    - title: "Fixed"
      types: ["fix", "perf"]
      
    - title: "Other"
      types: ["docs", "chore", "refactor", "test", "build", "ci", "style"]

# Version calculation rules
versioning:
  initial_version: "0.1.0"
  
  # Precedence (highest to lowest)
  precedence:
    - breaking  # Major bump
    - feat      # Minor bump  
    - fix       # Patch bump
    - perf      # Patch bump
    
  # Pre-release configuration (future use)
  prerelease:
    enabled: false
    identifier: "beta"

# Asset configuration
assets:
  platforms:
    - name: "linux-amd64"
      target: "x86_64-unknown-linux-gnu"
      archive: "tar.gz"
      asset_name: "sg-linux-amd64"
      
    - name: "linux-amd64-musl"
      target: "x86_64-unknown-linux-musl" 
      archive: "tar.gz"
      asset_name: "sg-linux-amd64-musl"
      
    - name: "linux-arm64"
      target: "aarch64-unknown-linux-gnu"
      archive: "tar.gz"
      asset_name: "sg-linux-arm64"
      
    - name: "linux-arm64-musl"
      target: "aarch64-unknown-linux-musl"
      archive: "tar.gz"
      asset_name: "sg-linux-arm64-musl"
      
    - name: "macos-amd64"
      target: "x86_64-apple-darwin"
      archive: "tar.gz"
      asset_name: "sg-macos-amd64"
      
    - name: "macos-arm64" 
      target: "aarch64-apple-darwin"
      archive: "tar.gz"
      asset_name: "sg-macos-arm64"
      
    - name: "windows-amd64"
      target: "x86_64-pc-windows-msvc"
      archive: "zip"
      asset_name: "sg-windows-amd64"
      
    - name: "windows-arm64"
      target: "aarch64-pc-windows-msvc"
      archive: "zip"
      asset_name: "sg-windows-arm64"

  # Checksum configuration
  checksums:
    algorithm: "sha256"
    generate: true
    
# Workflow configuration  
workflow:
  # Triggers
  triggers:
    - "push:main"
    - "workflow_dispatch"
    
  # Timeouts
  timeouts:
    analysis: "5m"
    build: "30m"
    release: "10m"
    
  # Retry configuration
  retry:
    max_attempts: 3
    backoff_factor: 2