#!/usr/bin/env bash
set -euo pipefail

YELLOW='\033[1;33m'
GREEN='\033[0;32m'
RED='\033[0;31m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

if [ "${SKIP_SAGE_HOOKS:-0}" = "1" ] || [ "${SKIP_PREPUSH:-0}" = "1" ]; then
    echo -e "${YELLOW}Skipping pre-push hook (explicitly disabled)${NC}"
    exit 0
fi

PROFILE="${SAGE_HOOKS_PREPUSH_PROFILE:-fast}"
case "$PROFILE" in
    fast|full) ;;
    *) PROFILE="fast" ;;
esac

STRICT_MODE="${SAGE_HOOKS_PREPUSH_STRICT:-0}"

FAILURES=()

has_tty() {
    [ -t 0 ] && [ -t 1 ]
}

record_failure() {
    local label="$1"
    if [ ${#FAILURES[@]} -eq 0 ]; then
        FAILURES=("$label")
    else
        FAILURES=("${FAILURES[@]}" "$label")
    fi
}

run_step() {
    local label="$1"
    local advice="$2"
    shift 2
    local cmd=("$@")

    echo -e "${YELLOW}→ ${label}${NC}"
    if "${cmd[@]}"; then
        echo -e "${GREEN}   ✓ ${label}${NC}"
    else
        echo -e "${RED}   ✗ ${label}${NC}"
        if [ -n "$advice" ]; then
            echo -e "${YELLOW}     › ${advice}${NC}"
        fi
        record_failure "$label"
    fi
}

run_soft_step() {
    local label="$1"
    shift
    local cmd=("$@")

    echo -e "${YELLOW}→ ${label}${NC}"
    if "${cmd[@]}"; then
        echo -e "${GREEN}   ✓ ${label}${NC}"
    else
        echo -e "${YELLOW}   ⚠️  ${label} reported warnings${NC}"
    fi
}

echo -e "${BLUE}═══════════════════════════════════════════${NC}"
echo -e "${BLUE}     Running pre-push verification...      ${NC}"
echo -e "${BLUE}═══════════════════════════════════════════${NC}"

remote="${1:-}"
url="${2:-}"

protected_branches="main master"
current_branch=$(git symbolic-ref HEAD | sed -e 's,.*/\(.*\),\1,')

for branch in $protected_branches; do
    if [ "$current_branch" = "$branch" ]; then
        echo -e "${YELLOW}⚠️  Pushing to protected branch '$branch'${NC}"
        if has_tty; then
            read -p "Do you want to continue pushing to $branch? (y/N) " -n 1 -r
            echo
            if [[ ! $REPLY =~ ^[Yy]$ ]]; then
                echo -e "${RED}Push cancelled${NC}"
                exit 1
            fi
        else
            echo -e "${YELLOW}ℹ️  Non-interactive push; continuing. Set SAGE_HOOKS_PREPUSH_STRICT=1 to block.${NC}"
            if [ "$STRICT_MODE" = "1" ]; then
                echo -e "${RED}Push blocked in strict mode${NC}"
                exit 1
            fi
        fi
    fi
done

echo -e "${YELLOW}Profile: $PROFILE${NC}"

run_step "Formatting check" "Run 'cargo fmt' to fix formatting" cargo fmt -- --check
run_step "Cargo check" "Run 'cargo check --workspace'" cargo check --workspace

if [ "$PROFILE" = "full" ]; then
    run_step "Clippy" "Run 'cargo clippy --all-targets --all-features'" cargo clippy --all-targets --all-features -- -D warnings
    run_step "Cargo build" "Run 'cargo build --all-features'" cargo build --all-features
    if command -v cargo-nextest >/dev/null 2>&1; then
        run_step "cargo nextest" "Run 'cargo nextest run --workspace --all-features'" cargo nextest run --workspace --all-features
    else
        run_step "Cargo test" "Run 'cargo test --workspace --all-features'" cargo test --workspace --all-features
    fi
    if [ -f ".config/hakari.toml" ] && command -v cargo-hakari >/dev/null 2>&1; then
        run_step "cargo hakari" "Run 'cargo hakari generate'" cargo hakari generate --diff
    fi
    run_soft_step "cargo doc" cargo doc --no-deps --all-features 2>/dev/null
    if command -v cargo-audit >/dev/null 2>&1; then
        run_soft_step "cargo audit" cargo audit
    fi
else
    echo -e "${YELLOW}Tip:${NC} Run 'just ci' when you want the full build/test/doc sweep before pushing."
fi

if [ ${#FAILURES[@]} -gt 0 ]; then
    echo -e "${YELLOW}⚠️  Some checks reported issues:${NC}"
    for failure in "${FAILURES[@]}"; do
        echo -e "  - $failure"
    done

    if [ "$STRICT_MODE" = "1" ] || [ -n "${CI:-}" ]; then
        echo -e "${RED}Strict mode enabled – aborting push.${NC}"
        exit 1
    fi

    if has_tty; then
        read -p "Continue with push anyway? (y/N) " -n 1 -r
        echo
        if [[ ! $REPLY =~ ^[Yy]$ ]]; then
            echo -e "${RED}Push cancelled${NC}"
            exit 1
        fi
    else
        echo -e "${YELLOW}Continuing push (non-interactive session).${NC}"
    fi
else
    echo -e "${GREEN}✅ Pre-push checks completed${NC}"
fi

echo -e "${BLUE}═══════════════════════════════════════════${NC}"
